// 1. Escreva uma função que calcule e retorne o fatorial de um número

console.log(ex01(4));
function ex01(a) {
  let fatorial = fator(a);
  console.log(`O fatorial de ${a} equivale a ${fatorial}`);
}

function fator(a) {
  if (a < 2) {
    return 1;
  } else {
    return a * fator(a - 1);
  }
}

// 2. Escreva uma função que retorne uma String contendo uma sequência de
// N mensagens do texto informado pelo usuário. O valor de N e a mensagem são
// informados por parâmetro

console.log(ex02(`Hey baby, call me`, 5));
function ex02(str, n) {
  for (let c = 0; c < n; c++) {
    console.log(str);
  }
  return 0;
}

// 3. Escreva uma função que receba 2 valores e uma operação básica: adição, subtração,
// multiplicação e divisão e retorne o resultado da operação.
// Observação: Faça a validação para prevenir a divisão por 0 e também para garantir que
// a operação informada é válida. Retorne nulo para os casos de erro.

console.log(ex03(5, "+", 5));
function ex03(n1, op, n2) {
  let result;
  if (op == "+") {
    result = soma(n1, n2);
  } else {
    if (op == "-") {
      result = sub(n1, n2);
    } else {
      if (op == "/") {
        result = div(n1, n2);
      } else {
        if (op == "*") {
          result = mult(n1, n2);
        } else {
          console.log(
            `A operação informada é incorreta! \n Tabela:\n [soma = +]\n[subt = -]\n[Divi = /]\n[Mult = *]\n`
          );
        }
      }
    }
  }
  return result;
}

function soma(a, b) {
  return a + b;
}

function sub(a, b) {
  return a - b;
}

function div(a, b) {
  return a / b;
}

function mult(a, b) {
  return a * b;
}

//  4. Escreva uma função que retorne um vetor contendo o resultado da tabuada de um
//  número recebido por parâmetro. Cada resultado na respectiva posição do índice

console.log(ex04(5));
function ex04(n) {
  let vetor = [],
    texto = "";
  for (let c = 0; c <= 10; c++) {
    vetor.push(n * c);
    texto += `${n} x ${c} = ${vetor[c]};`;
  }
  return texto.split(";");
}

// 5. Escreva uma função que retorne um número fornecido pelo usuário, porém
// invertido. Por exemplo, o usuário fornece o número 875 e a função retorna o número
// 578. O argumento da função e o retorno deve ser um valor inteiro.

console.log(ex05(1234));
function ex05(n) {
  let vetorNormal = [],
    numeroInverso = "";
  n = n.toString();
  vetorNormal = n.split("");
  for (c = n.length - 1; c >= 0; c--) {
    numeroInverso += vetorNormal[c];
  }
  parseInt(numeroInverso);
  return `O valor ao contrario ${numeroInverso}`;
}

// 6. Escreva uma função que permita contar o número de vogais contidas em uma string
// fornecida por parâmetro. Por exemplo, o usuário informa a string “Brocolis”, e a função
// retorna o número 3 (há 3 vogais nessa palavra).

console.log(ex06("Ola"));
function ex06(str) {
  let vogais = 0,
    vetorStr;
  vetorStr = str.split("");
  for (let c = 0; c < str.length; c++) {
    if (
      vetorStr[c].toUpperCase() == "A" ||
      vetorStr[c].toUpperCase() == "E" ||
      vetorStr[c].toUpperCase() == "I" ||
      vetorStr[c].toUpperCase() == "O" ||
      vetorStr[c].toUpperCase() == "U"
    ) {
      vogais++;
    }
  }
  return `A quantidade de vogais da palavra ${str} é ${vogais} e o vetor ${vetorStr}`;
}

// 7. Escreva uma função que receba uma sequência de parênteses e colchetes e retorne se
// a sequência está bem formada ou não. O retorno deve ser um valor lógico. Exemplo:
// “(([]))” retorna true, “(([)])” retorna falso.

function validaTexto(str) {
  let pilha = [];
  for (let c = 0; c < str.length; c++) {
    if (str[c] == "[" || str[c] == "(") {
      return false;
    }
  }
}
